import numpy as np
import pandas as pd
df=pd.read_csv("glass.csv")

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()

x=df.drop('Type',axis=1)
y=df.Type

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)

from sklearn.svm import SVC
svclassifier=SVC(kernel='linear')
svclassifier.fit(x_train,y_train)
y_pred=svclassifier.predict(x_test)
accuracy_score(y_test,y_pred)

print(svclassifier.support_vectors_)
print(svclassifier.n_support_)
print(confusion_matrix(y_test,y_pred))
print(classification_report(y_test,y_pred))

model1=SVC(kernel='sigmoid')
model2=SVC(kernel='poly')
model3=SVC(kernel='rbf')

model1.fit(x_train,y_train)
model2.fit(x_train,y_train)
model3.fit(x_train,y_train)

ypred1=model1.predict(x_test)
ypred2=model2.predict(x_test)
ypred3=model3.predict(x_test)

params_grid1=[{'kernel':['rbf']},
             {'kernel':['linear']},
             {'kernel':['poly']},
             {'kernel':['sigmoid']}]

print('Best score for training data:',svm_model.best_score_,"\n")

print('Best C:',svm_model.best_estimator_.C,"\n")
print('Best Kernel:',svm_model.best_estimator_.kernel,"\n")
print('Best Gamma:',svm_model.best_estimator_.gamma,"\n")

final_model=svm_model.best_estimator_
Y_pred=final_model.predict(x_test)